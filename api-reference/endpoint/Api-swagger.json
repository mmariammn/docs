{
    "openapi": "3.0.1",
    "info": {
        "title": "Legado Digital Vault API",
        "description": "## Digital Vault API\r\n\r\nThe Digital Vault API provides the functionality for the digital vault.  An SSO token is required to provide the user context for the majority of method calls.\r\n\r\n### Authentication\r\n\r\nIn order to make calls to the Vault API, it is necessary to use a combination of API Key and SSO Token. \r\n\r\nThese values should be provided in the headers:\r\n\r\n*   API Key (header parameter ApiKey)  identifies the corporate platform.\r\n*   Subscription Key (header parameter subscription-key) is the key which identifies the calling application.\r\n\r\nFor any method call which requires authentication, a bearer token must be attached to the request header as well.\r\n\r\nIn local development, or in the Dev and QA environments, its possible to get a token for any email address just by calling this:\r\n\r\n```plaintext\r\n/api/auth?email=<email>\r\n```\r\n\r\nThis will not work in pre-prod and production.  A genuine token must be provided from the calling application.\r\n\r\nIf the calling application is set up to provide a token in exchange for a one-time use code, then this can be acheved by calling this method:\r\n\r\n```plaintext\r\n/api/auth/token?code=<code>\r\n```\r\n\r\nThe token will be configured with a short time to live - for example 15 minutes, but this will vary depending on the settings of the calling application. Any UI which uses this API needs to keep the token refreshed for the duration of the session.  This can be done by calling the refresh method:\r\n\r\n```plaintext\r\n/api/auth/refresh\r\n```\r\n\r\nSimply attaching the existing bearer token will get a new one for the same user.  The Api Key specified will result in looking up the SSO settings for the host platform.\r\n\r\n### Loading the Vault\r\n\r\nOnce the authentication process is complete, the current user can be identified by calling the “get user” method:\r\n\r\n```plaintext\r\n/api/user/get\r\n```\r\n\r\nThe full folder and file structure can be obtained by calling the “get node list” method.\r\n\r\n```plaintext\r\n/api/node/getnodelist?contents=true\r\n```\r\n",
        "contact": {
            "name": "Legado Technologies Ltd",
            "url": "https://www.joinlegado.com/developers",
            "email": "api@joinlegado.com"
        },
        "version": "v1.0"
    },
    "paths": {
        "/api/Activity/Recent": {
            "get": {
                "tags": [
                    "Activity"
                ],
                "summary": "Recent Changes",
                "description": "Get the list of recent changes to the vault",
                "responses": {
                    "200": {
                        "description": "Returns the ActivityLog objects",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ActivityLogEntryDto"
                                    }
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ActivityLogEntryDto"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Attempt to get activities failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Activity/All": {
            "get": {
                "tags": [
                    "Activity"
                ],
                "summary": "All Activities",
                "description": "Get the list of all activities for the current User",
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the ActivityLog objects",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ActivityLogEntryDto"
                                    }
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ActivityLogEntryDto"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Attempt to get activities failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Activity/{nodeId}/log": {
            "get": {
                "tags": [
                    "Activity"
                ],
                "summary": "Activity Log",
                "description": "Get the activity log for a node",
                "parameters": [
                    {
                        "name": "nodeId",
                        "in": "path",
                        "description": "the node id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the ActivityLog object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ActivityLogEntryDto"
                                    }
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ActivityLogEntryDto"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Attempt to get activities failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user does not have permission",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Adviser/client/{clientId}": {
            "delete": {
                "tags": [
                    "Adviser"
                ],
                "summary": "Remove Client",
                "description": "Remove a client - A user who is sharing with you as an adviser",
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "the client's user id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Client not found for user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Adviser/clients/list": {
            "get": {
                "tags": [
                    "Adviser"
                ],
                "summary": "Get Clients List For Advisers",
                "description": "For an adviser, return all the users who share with their organisation",
                "responses": {
                    "200": {
                        "description": "Returns a list of users objects",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserDto"
                                    }
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserDto"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Contact is not valid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Contact or users not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Adviser/client/invite": {
            "post": {
                "tags": [
                    "Adviser"
                ],
                "summary": "Add client for Advisers",
                "description": "For an adviser, add a client matching the InviteDto",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClientInviteDto"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClientInviteDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClientInviteDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns the new user object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Client invite is not valid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Adviser/clients/{sharerId}": {
            "get": {
                "tags": [
                    "Adviser"
                ],
                "summary": "Get a Client's File List",
                "description": "For an adviser, return folders + files from the client's vault",
                "parameters": [
                    {
                        "name": "sharerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of folders, files and sections",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SharedVaultDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/SharedVaultDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Contact is not valid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Contact or users not found"
                    }
                }
            }
        },
        "/api/Adviser/account/{accountId}": {
            "get": {
                "tags": [
                    "Adviser"
                ],
                "summary": "Get File List For a specific Account",
                "description": "For an adviser, Get File List For a specific Account",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of folders, files and sections",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SharedVaultDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/SharedVaultDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Contact is not valid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Contact or users not found"
                    }
                }
            }
        },
        "/api/Adviser/organisation/{organisationId}/advisers": {
            "get": {
                "tags": [
                    "Adviser"
                ],
                "summary": "Get Advisers for an Organisation",
                "parameters": [
                    {
                        "name": "organisationId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of advisers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AdviserDto"
                                    }
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AdviserDto"
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No advisers found for the organisation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Organisation is not from the current platform",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Auth": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get Token from Email (Dev and QA only)",
                "description": "Gets the Bearer token for authentication",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "The current user's email",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ttl",
                        "in": "query",
                        "description": "Time to Live in minutes",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "skipLogActivity",
                        "in": "query",
                        "description": "Option to skip Login activity being fired",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the bearer token",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "If API key or secret is missing",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "If API key or secret is invalid",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "If method is not in use due to configuration",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Auth/token": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get Token from Code",
                "description": "Obtains a token from the SSO Provider using the Code provided",
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "description": "The single use code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "isPrimaryUser",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the access token and refresh token",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenDto"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenDto"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "If code is not supplied",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "If code is invalid",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Auth/refresh": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh Token",
                "description": "Generates a new token for the user",
                "responses": {
                    "200": {
                        "description": "Returns the new token",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "If received token is invalid",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/BulkDistribution/upload": {
            "post": {
                "tags": [
                    "BulkDistribution"
                ],
                "summary": "Upload file(s) for distribution",
                "description": "Upload a file or multiple files for distribution",
                "parameters": [
                    {
                        "name": "projectName",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the Project ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistributionProjectInfoDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistributionProjectInfoDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "A number of reasons",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user does not have permission",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/BulkDistribution/project/{projectId}/csvupload": {
            "put": {
                "tags": [
                    "BulkDistribution"
                ],
                "summary": "Uploads CSV criteria file for distribution project",
                "description": "Upload a CSV file containing a list of clients the \r\ndistribution file is to be shared between",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "ID of the distribution project",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistributionProjectInfoDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistributionProjectInfoDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "A number of reasons",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user does not have permission",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/BulkDistribution/project/{projectId}/clients": {
            "get": {
                "tags": [
                    "BulkDistribution"
                ],
                "summary": "Gets the list of clients for the distribution project",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Id of the project",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "start index of results for pagination purposes",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "amount of results",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 20
                        }
                    },
                    {
                        "name": "sortDesc",
                        "in": "query",
                        "description": "sort by descending or ascending",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search terms",
                        "schema": {
                            "type": "string",
                            "default": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of clients",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistributionClientsSearchDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistributionClientsSearchDto"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No clients found meeting the criteria",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "A number of reasons",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user does not have permission",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/BulkDistribution/project/{projectId}/filtercriteria": {
            "put": {
                "tags": [
                    "BulkDistribution"
                ],
                "summary": "Uploads filter criteria information for distribution project",
                "description": "Upload a list of filter criteria info for clients the \r\ndistribution file is to be shared between",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "ID of the distribution project",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Dto with filter criteria",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DistributionFilterDto"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DistributionFilterDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/DistributionFilterDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistributionProjectInfoDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistributionProjectInfoDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/BulkDistribution/project/{projectId}/saveprojectdetails": {
            "put": {
                "tags": [
                    "BulkDistribution"
                ],
                "summary": "Uploads details for drafted distribution project",
                "description": "Upload details required for a draft distribution project",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Id of project to save details against",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "DTO containing the remaining info",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreDistributionDetailsDto"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreDistributionDetailsDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreDistributionDetailsDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistributionProjectInfoDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistributionProjectInfoDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/BulkDistribution/project/{projectId}/schedule": {
            "put": {
                "tags": [
                    "BulkDistribution"
                ],
                "summary": "Uploads details and schedules for distribution project",
                "description": "Upload the remaining details required and schedules the\r\nfile distribution project",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Id for project",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "test",
                        "in": "query",
                        "description": "(Optional) Flag used for integration tests. Do not use",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "requestBody": {
                    "description": "DTO containing the remaining info",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreDistributionDetailsDto"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreDistributionDetailsDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreDistributionDetailsDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistributionProjectInfoDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistributionProjectInfoDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/BulkDistribution/project/{projectId}/users": {
            "patch": {
                "tags": [
                    "BulkDistribution"
                ],
                "summary": "Remove a user from a distribution project through their email",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Id of the project",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Array of users emails to be removed from the project (Taken from the body)",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/BulkDistribution/project/{projectId}": {
            "delete": {
                "tags": [
                    "BulkDistribution"
                ],
                "summary": "Cancel/Delete a distribution project",
                "description": "Deletes the distribution project and related files if it is in draft.\r\nCancels the project if it is scheduled but has not distributed yet.",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Id of the project",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "test",
                        "in": "query",
                        "description": "(Optional) Flag used for integration tests. Do not use",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "BulkDistribution"
                ],
                "summary": "Get Distribution Project Info",
                "description": "Gets all the information for a distribution project",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "ID of the distribution project",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistributionProjectInfoDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistributionProjectInfoDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/BulkDistribution/project/{projectId}/file/remove": {
            "put": {
                "tags": [
                    "BulkDistribution"
                ],
                "summary": "Removes file(s) from an undistributed project",
                "description": "Removes file(s) from a distribution project that\r\ncurrently hasn't been run yet",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "ID of the distribution project",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "List of files to remove",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistributionFileRemovalDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistributionFileRemovalDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/BulkDistribution/project/{projectId}/criteria/remove": {
            "put": {
                "tags": [
                    "BulkDistribution"
                ],
                "summary": "Removes criteria from an undistributed project",
                "description": "Removes criteria from a distribution project that\r\ncurrently hasn't been run yet. This will necessarily\r\nbring the proiect back to the criteria upload stage",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "ID of the distribution project",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/BulkDistribution/project/all": {
            "get": {
                "tags": [
                    "BulkDistribution"
                ],
                "summary": "Get All Distribution Project Infos",
                "description": "Gets all the information for all available distribution project",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DistributionProjectAnalyticsInfoDto"
                                    }
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DistributionProjectAnalyticsInfoDto"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/BulkDistribution/project/{projectId}/clientlist": {
            "get": {
                "tags": [
                    "BulkDistribution"
                ],
                "summary": "Get Client List by Project",
                "description": "Gets the client list and relevant information for a particular project",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Id of the Project",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "fileId",
                        "in": "query",
                        "description": "(Optional) Id of the file.",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "(Optional) Version of the distributed documents.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "(Optional) Viewed status of the distributed documents.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "(Optional) Start index of list.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "(Optional) Number of clients to return.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 20
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "(Optional) How the list of clients is sorted. 0 = By Name, 1 = By Email, 2 = By Opened Date.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 3
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "(Optional) Whether the list is sorted in descending order.",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "(Optional) Search string to filter the list of clients.",
                        "schema": {
                            "type": "string",
                            "default": ""
                        }
                    },
                    {
                        "name": "revokedStatus",
                        "in": "query",
                        "description": "(Optional) Filter on whether the client has been revoked or not",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistributionProjectClientListDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistributionProjectClientListDto"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/BulkDistribution/project/{projectId}/user/{userId}/revoke/all": {
            "put": {
                "tags": [
                    "BulkDistribution"
                ],
                "summary": "Revoke all distributed files from a project from a particular user's vault",
                "description": "Revokes all distributed files from a project from a particular user's vault",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Id of the project the file was distributed from",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "Id of the user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistributionProjectInfoDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistributionProjectInfoDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/BulkDistribution/project/{projectId}/file/{fileId}/revoke": {
            "put": {
                "tags": [
                    "BulkDistribution"
                ],
                "summary": "Revoke a single file from the distribution",
                "description": "Revoke a particular file from the distribution list when already pushed to the Vault",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Id of the project",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "fileId",
                        "in": "path",
                        "description": "Id of the file",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistributionProjectInfoDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistributionProjectInfoDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/BulkDistribution/project/{projectId}/file/{fileId}/version/new": {
            "put": {
                "tags": [
                    "BulkDistribution"
                ],
                "summary": "Upload a new version of an existing distributing file",
                "description": "Uploads a new version of an existing distributing file, replacing the old version",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Id of the project",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "fileId",
                        "in": "path",
                        "description": "Id of the file",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "sendNotification",
                        "in": "query",
                        "description": "(Optional) Determines whether notification should be sent",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistributionProjectInfoDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistributionProjectInfoDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/BulkDistribution/project/{projectId}/file/{fileId}/version/update/{newVersion}": {
            "put": {
                "tags": [
                    "BulkDistribution"
                ],
                "summary": "Update the version of a particular distributing file",
                "description": "Update the version of a particular distributing file",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Id of the project",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "fileId",
                        "in": "path",
                        "description": "Id of the file",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "newVersion",
                        "in": "path",
                        "description": "New version number to update to",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistributionProjectInfoDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistributionProjectInfoDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/BulkDistribution/project/{projectId}/visibility/{newVisibility}": {
            "patch": {
                "tags": [
                    "BulkDistribution"
                ],
                "summary": "Update the visibility of a particular distributing project",
                "description": "Update the visibility of a particular distributing project",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Id of the project",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "newVisibility",
                        "in": "path",
                        "description": "New visibility to update to",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistributionProjectInfoDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistributionProjectInfoDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/BulkDistribution/project/{projectId}/name": {
            "patch": {
                "tags": [
                    "BulkDistribution"
                ],
                "summary": "Updates the name of a project",
                "description": "Updates the name of a project",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Id of the project",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "newName",
                        "in": "query",
                        "description": "New name of the project",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/BulkDistribution/project/{projectId}/campaignreport": {
            "get": {
                "tags": [
                    "BulkDistribution"
                ],
                "summary": "Generate Campaign Report",
                "description": "Returns data for the Analytics Campaign Report",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Guid for project",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "Start date",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "Emd date",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "fileId",
                        "in": "query",
                        "description": "(Optional) Filter by file Id (defaults to returning data for entire project)",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "(Optional) Filter by file version (defaults to all)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "device",
                        "in": "query",
                        "description": "(Optional) Filter by device views/downloads (defaults to All; -1 = All, 0 = Browser, 1 = WebApp)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": -1
                        }
                    },
                    {
                        "name": "userType",
                        "in": "query",
                        "description": "(Optional) Filter by user type (defaults to Both; 0 = Both, 1 = Clients, 2 = Advisers)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistributionCampaignReportDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistributionCampaignReportDto"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/BulkDistribution/projects/analytics": {
            "get": {
                "tags": [
                    "BulkDistribution"
                ],
                "summary": "Get the list of projects sent within that date range, total amount of documents opened, percentage of opened documents and amount of documents downloaded",
                "parameters": [
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "Start date for filtering projects sent list (inclusive)",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "End date for filtering projects sent list (inclusive)",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "context",
                        "in": "query",
                        "description": "Context filter. Possible values are: -1 = Any/All, 0 = Browser, 1 = MobileApp",
                        "schema": {
                            "$ref": "#/components/schemas/PlatformContext"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistributionProjectsAnalyticsDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistributionProjectsAnalyticsDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/BulkDistribution/projects/analytics/dates": {
            "get": {
                "tags": [
                    "BulkDistribution"
                ],
                "summary": "Get information about number of projects sent and number of documents opened per date within the date range",
                "parameters": [
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "date for lower range limit(inclusive), if null it will default to the date of the first completed project",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "date for upper range limit (inclusive)",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "context",
                        "in": "query",
                        "description": "context in which files were opened. -1 = All , 0 = Browser , 1 = MobileApp",
                        "schema": {
                            "$ref": "#/components/schemas/PlatformContext"
                        }
                    },
                    {
                        "name": "timePeriod",
                        "in": "query",
                        "description": "period range of returned data. 0 = daily , 1 = weekly , 2 = Monthly , 3 = Yearly",
                        "schema": {
                            "$ref": "#/components/schemas/TimePeriod"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistributionProjectDatesAnalyticsDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistributionProjectDatesAnalyticsDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Connectivity/industries": {
            "get": {
                "tags": [
                    "Connectivity"
                ],
                "summary": "Get Industry list",
                "parameters": [
                    {
                        "name": "onlyEnabled",
                        "in": "query",
                        "description": "Will only return industries that are enabled",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of provider objects",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Industry"
                                    }
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Industry"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Connectivity/providers": {
            "get": {
                "tags": [
                    "Connectivity"
                ],
                "summary": "Get Provider List",
                "parameters": [
                    {
                        "name": "onlyEnabled",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Provider"
                                    }
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Provider"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Connectivity/suggestedProvider": {
            "post": {
                "tags": [
                    "Connectivity"
                ],
                "summary": "Add Suggested Provider",
                "description": "Adds a suggested provider from the \"Provider Not There?\" modal. If the name already exists in DB then the count is incremented instead.",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SuggestedProviderDto"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SuggestedProviderDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SuggestedProviderDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Name is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Connectivity/providerAccount": {
            "post": {
                "tags": [
                    "Connectivity"
                ],
                "summary": "Add Provider Account",
                "description": "Adds a provider account for the user, by setting the credentials",
                "parameters": [
                    {
                        "name": "folderId",
                        "in": "query",
                        "description": "[Optional] Id of the existing folder for this provider",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The account details to add",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderAccountDto"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderAccountDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderAccountDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FolderDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/FolderDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Name is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Connectivity"
                ],
                "summary": "Delete Provider Account",
                "description": "Deletes a provider account for the user",
                "parameters": [
                    {
                        "name": "folderId",
                        "in": "query",
                        "description": "The id of the Folder related to the provider being deleted",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Provider successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Info within response message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Connectivity/providerAccount/disconnect": {
            "put": {
                "tags": [
                    "Connectivity"
                ],
                "summary": "Disconnect Provider Account",
                "description": "Disconnect a provider account for the user",
                "parameters": [
                    {
                        "name": "folderId",
                        "in": "query",
                        "description": "The id of the Folder related to the provider being disconnected",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Provider successfully disconnected",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Info within response message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "424": {
                        "description": "Failed to disconnected provider on Wonderbill",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Connectivity/providerAccount/reconnect": {
            "put": {
                "tags": [
                    "Connectivity"
                ],
                "summary": "Reconnect Provider Account",
                "description": "Reconnect a provider account for the user",
                "parameters": [
                    {
                        "name": "folderId",
                        "in": "query",
                        "description": "The id of the Folder related to the provider being reconnected",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Provider successfully Reconnected",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Info within response message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "424": {
                        "description": "Failed to reconnect provider on Wonderbill",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Connectivity/providerAccount/accountInfo": {
            "get": {
                "tags": [
                    "Connectivity"
                ],
                "summary": "Get Provider Account Info",
                "description": "Gets the Account Info for a particular linked account (via linked folder Id)",
                "parameters": [
                    {
                        "name": "folderId",
                        "in": "query",
                        "description": "The id of the Folder related provider account being checked",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the Account info",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountDetailDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountDetailDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Info within response message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "424": {
                        "description": "Failed to get account info from Wonderbill",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Connectivity/GetFolderConnectionStatus": {
            "get": {
                "tags": [
                    "Connectivity"
                ],
                "summary": "Get list of Folder Connections by current user.",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FolderConnectionDto"
                                    }
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FolderConnectionDto"
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent"
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Connectivity/readStatus": {
            "put": {
                "tags": [
                    "Connectivity"
                ],
                "summary": "Set List of folder statuses as read",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden to edit node",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/CorporateAdmin/headaccount/{headAccount}/fileupload": {
            "post": {
                "tags": [
                    "CorporateAdmin"
                ],
                "summary": "Upload file to client vault",
                "description": "Upload file to client's vault",
                "parameters": [
                    {
                        "name": "headAccount",
                        "in": "path",
                        "description": "The head-account reference",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subAccount",
                        "in": "query",
                        "description": "(Optional) The sub-account reference (if required)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "visibility",
                        "in": "query",
                        "description": "Visibility of uploaded file (AdminOnly, AdviserOnly, ClientOnly, ClientAndAdviser)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sendNotification",
                        "in": "query",
                        "description": "(Optional) Flag indicating whether to send notification (defaults to false)",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the new file DTO",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FileNodeDto"
                                    }
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FileNodeDto"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "User is forbidden"
                    }
                }
            }
        },
        "/api/CorporateAdmin/file/{fileId}/visibility/{visibility}": {
            "patch": {
                "tags": [
                    "CorporateAdmin"
                ],
                "summary": "Change file visibility",
                "parameters": [
                    {
                        "name": "fileId",
                        "in": "path",
                        "description": "Id of the users file to change visibility",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "visibility",
                        "in": "path",
                        "description": "New visibility of file. Visibility options are as follow: 0 = AdminOnly, 1 = AdviserOnly, 2 = ClientOnly, 3 = ClientAndAdviser",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/FileVisibility"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Feature/plan": {
            "get": {
                "tags": [
                    "Feature"
                ],
                "summary": "Get Feature Plan",
                "description": "Get the feature plan for a user",
                "responses": {
                    "200": {
                        "description": "Returns the Feature Plan object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FeaturePlanForUserDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/FeaturePlanForUserDto"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "If user has no plan",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Feature/{featureId}": {
            "get": {
                "tags": [
                    "Feature"
                ],
                "summary": "User Has Feature By ID",
                "description": "Does the user have the feature by id",
                "parameters": [
                    {
                        "name": "featureId",
                        "in": "path",
                        "description": "the feature id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns true or false",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Feature/featurename/{featureName}": {
            "get": {
                "tags": [
                    "Feature"
                ],
                "summary": "User Has Feature By Name",
                "description": "Does the user have the feature by name",
                "parameters": [
                    {
                        "name": "featureName",
                        "in": "path",
                        "description": "The feature Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns true or false",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Feature/GetFeatureSet": {
            "get": {
                "tags": [
                    "Feature"
                ],
                "summary": "Get Feature Set",
                "description": "Get the set of features for the user from a cross match between the user roles and the platform\r\nAlso returns the theme",
                "parameters": [
                    {
                        "name": "enabledOnly",
                        "in": "query",
                        "description": "Boolean to show only enabled Features",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the array of feature ids and theme",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot obtain Platform provider, role(s) or features. Or user does not have features",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Api key is not supplied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Health/Ping": {
            "get": {
                "tags": [
                    "Health"
                ],
                "summary": "Ping the API",
                "description": "Ping the API",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/Health/CryptoPing": {
            "get": {
                "tags": [
                    "Health"
                ],
                "summary": "Pings the Crypto API",
                "description": "Ping the Crypto API",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/Health/ExternalConnectorPing": {
            "get": {
                "tags": [
                    "Health"
                ],
                "summary": "Pings the External Connector API\r\nremoteScheme 0 = None, 1 = FNZ, 2 = WonderBill",
                "description": "Ping the External Connector API",
                "parameters": [
                    {
                        "name": "remoteScheme",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/Node/GetNodeList": {
            "get": {
                "tags": [
                    "Node"
                ],
                "summary": "Get Node List",
                "description": "Get the the node list for a vault the current user.",
                "parameters": [
                    {
                        "name": "contents",
                        "in": "query",
                        "description": "whether to include folder contents",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "levels",
                        "in": "query",
                        "description": "number of levels to return, if 0 all levels are returned",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "legadoOnly",
                        "in": "query",
                        "description": "whether to include only legado files",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of Node objects.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NodeDto"
                                    }
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NodeDto"
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Empty Node Id supplied\", or levels is negative",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user does not have access to this vault",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Node/GetFlatFileList": {
            "get": {
                "tags": [
                    "Node"
                ],
                "summary": "Get Flat File List",
                "description": "Gets the flattened node list for a current user.",
                "parameters": [
                    {
                        "name": "legadoOnly",
                        "in": "query",
                        "description": "whether to include only legado files",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of files",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FlatFileNodeDto"
                                    }
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FlatFileNodeDto"
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request is not valid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user does not have access to this vault",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Node/{nodeId}/owner": {
            "get": {
                "tags": [
                    "Node"
                ],
                "summary": "Get Node Owner",
                "description": "Get the owner of a node",
                "parameters": [
                    {
                        "name": "nodeId",
                        "in": "path",
                        "description": "The node id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the User object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDto"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Node ID is missing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Node/SuggestedFolders": {
            "get": {
                "tags": [
                    "Node"
                ],
                "summary": "Get suggested folders",
                "description": "Suggested folders offer a predefined folder structure for the user",
                "responses": {
                    "200": {
                        "description": "Returns the list of Node objects",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SuggestedFolderDto"
                                    }
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SuggestedFolderDto"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Node/{fileId}/download": {
            "get": {
                "tags": [
                    "Node"
                ],
                "summary": "Download",
                "description": "Download the file with the specified Id",
                "parameters": [
                    {
                        "name": "fileId",
                        "in": "path",
                        "description": "The file Id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "logDownload",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the file stream",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "File was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "file id is missing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user does not have permission",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Node/{folderId}/upload": {
            "post": {
                "tags": [
                    "Node"
                ],
                "summary": "Upload",
                "description": "Upload a file or multiple files to the specified folder",
                "parameters": [
                    {
                        "name": "folderId",
                        "in": "path",
                        "description": "The id of the folder to upload to",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of File objects",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FileNodeDto"
                                    }
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FileNodeDto"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "A number of reasons",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user does not have permission",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Node/file/{fileId}/rename": {
            "put": {
                "tags": [
                    "Node"
                ],
                "summary": "Rename File",
                "description": "Rename a file",
                "parameters": [
                    {
                        "name": "fileId",
                        "in": "path",
                        "description": "The id of the file to rename to",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The id of the file to rename to",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "string"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns OK Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "A number of reasons",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user does not have permission",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Node/file/{nodeId}": {
            "delete": {
                "tags": [
                    "Node"
                ],
                "summary": "Delete File",
                "description": "Delete a file",
                "parameters": [
                    {
                        "name": "nodeId",
                        "in": "path",
                        "description": "The id of the file to delete",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Ok Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "A number of reasons",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user does not have permission",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Node/file/restore/{nodeId}": {
            "post": {
                "tags": [
                    "Node"
                ],
                "summary": "Restore File",
                "description": "Restore a file",
                "parameters": [
                    {
                        "name": "nodeId",
                        "in": "path",
                        "description": "The id of the file to restore",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Ok Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "A number of reasons",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user does not have permission",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Node/folder": {
            "post": {
                "tags": [
                    "Node"
                ],
                "summary": "Create Folder",
                "description": "Creates a folder. Custom folders need to have a valid ParentId. DefaultStructure Folders need to be placed at the correct path.\r\nIf DefaultStructureFolder is passed without a name, then it will be set to default name.",
                "requestBody": {
                    "description": "Contains ParentId, name and type. ParentId could be null if root folder. Name could be null if DefaultFolderStructure and type defaults to Client Custom Folder",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateFolderDto"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateFolderDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateFolderDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns Ok Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FolderTreeNodeDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/FolderTreeNodeDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "A number of reasons",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user does not have permission",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Node/folder/{folderId}/rename": {
            "put": {
                "tags": [
                    "Node"
                ],
                "summary": "Rename Folder",
                "description": "Rename a folder",
                "parameters": [
                    {
                        "name": "folderId",
                        "in": "path",
                        "description": "The id of the folder to rename to",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The name of the folder to rename to",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "string"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns Ok Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "A number of reasons",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user does not have permission",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Node/Folder/{nodeId}": {
            "delete": {
                "tags": [
                    "Node"
                ],
                "summary": "Delete Folder",
                "description": "Delete a Folder",
                "parameters": [
                    {
                        "name": "nodeId",
                        "in": "path",
                        "description": "The id of the Folder to delete",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Ok Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "A number of reasons",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user does not have permission",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Node/folder/restore/{nodeId}": {
            "post": {
                "tags": [
                    "Node"
                ],
                "summary": "Restore Folder",
                "description": "Restore a Folder and its contents",
                "parameters": [
                    {
                        "name": "nodeId",
                        "in": "path",
                        "description": "The id of the folder to restore",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Ok Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "A number of reasons",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user does not have permission",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Node/{nodeId}/pin": {
            "put": {
                "tags": [
                    "Node"
                ],
                "summary": "Set Pin",
                "description": "Flag node as pinned for user.",
                "parameters": [
                    {
                        "name": "nodeId",
                        "in": "path",
                        "description": "The id for the node",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "pin",
                        "in": "query",
                        "description": "The flag to set pinned as True/False",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Ok Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "A number of reasons",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user does not have permission",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Node/pinned": {
            "get": {
                "tags": [
                    "Node"
                ],
                "summary": "Get Pinned Nodes",
                "description": "Get pinned nodes for user.",
                "responses": {
                    "200": {
                        "description": "Returns Ok Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "A number of reasons"
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user does not have permission"
                    }
                }
            }
        },
        "/api/Node/file/GetThumbnail/{fileId}": {
            "get": {
                "tags": [
                    "Node"
                ],
                "summary": "Get Thumbnail",
                "description": "Get file card thumbnail",
                "parameters": [
                    {
                        "name": "fileId",
                        "in": "path",
                        "description": "The id of the File",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "fullSize",
                        "in": "query",
                        "description": "Optional. If true return full size thumbnail, else the small version",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns thumbnail as base64",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The user is not authorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is forbidden from getting this thumbnail",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Node/file/recentimportant/{userId}": {
            "get": {
                "tags": [
                    "Node"
                ],
                "summary": "Get the most recent files marked as important for a user",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "Id of the user",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "(optional) Max amount of recent files to be retrieved",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FileImportantRecentDto"
                                    }
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FileImportantRecentDto"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Node/file/GetFileCoordinatorStatus/{fileId}": {
            "get": {
                "tags": [
                    "Node"
                ],
                "summary": "Get file coordinator status",
                "description": "File coordinator manages the process of creating thumbnail and preview",
                "parameters": [
                    {
                        "name": "fileId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns boolean result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The user is not authorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Node/file/GetPreview/{fileId}": {
            "get": {
                "tags": [
                    "Node"
                ],
                "summary": "Get File Preview",
                "description": "Get the preview PDF copy of the file",
                "parameters": [
                    {
                        "name": "fileId",
                        "in": "path",
                        "description": "The id of the File",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "logPreview",
                        "in": "query",
                        "description": "Optional parameter, determines whether to log Preview Activity",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns preview as base64",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The user is not authorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is forbidden from seeing this preview",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Node/file/GetTags/{fileId}": {
            "get": {
                "tags": [
                    "Node"
                ],
                "summary": "Get Tags",
                "description": "Get the tags for a file",
                "parameters": [
                    {
                        "name": "fileId",
                        "in": "path",
                        "description": "The id of the File",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns tags as string (JSON)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is forbidden from seeing these file tags",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Node/file/TriggerFileReview/{fileId}": {
            "post": {
                "tags": [
                    "Node"
                ],
                "summary": "Trigger File Review",
                "description": "The file review extracts key data from the file",
                "parameters": [
                    {
                        "name": "fileId",
                        "in": "path",
                        "description": "The id of the File",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "forceReview",
                        "in": "query",
                        "description": "Flag to force a review, regardless of the file's flag",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Review successfully triggered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The user is not authorized to post this file preview"
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Node/file/AddTag/{fileId}": {
            "put": {
                "tags": [
                    "Node"
                ],
                "summary": "Add Tag",
                "description": "Add user tag to file",
                "parameters": [
                    {
                        "name": "fileId",
                        "in": "path",
                        "description": "The id of the File",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "tagName",
                        "in": "query",
                        "description": "The name of the tag to be added",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tag successfully added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The user is not authorized to edit this file"
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Node/file/DeleteTag/{fileId}": {
            "put": {
                "tags": [
                    "Node"
                ],
                "summary": "Delete Tag",
                "description": "Delete user tag from file",
                "parameters": [
                    {
                        "name": "fileId",
                        "in": "path",
                        "description": "The id of the File",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "tagName",
                        "in": "query",
                        "description": "The name of the tag to be deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tag successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The user is not authorized to edit this file"
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Node/file/DeleteOrganization/{fileId}": {
            "put": {
                "tags": [
                    "Node"
                ],
                "summary": "Delete Organization",
                "description": "Delete Organization from file",
                "parameters": [
                    {
                        "name": "fileId",
                        "in": "path",
                        "description": "The id of the File",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The name of the Organization to be deleted",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "string"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Organization successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The user is not authorized to edit this file"
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Node/file/DeleteDate/{fileId}": {
            "put": {
                "tags": [
                    "Node"
                ],
                "summary": "Delete Date",
                "description": "Delete Date from file",
                "parameters": [
                    {
                        "name": "fileId",
                        "in": "path",
                        "description": "The id of the File",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The date to be deleted",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "string"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Date successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The user is not authorized to edit this file"
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Node/file/CanBeReviewed/{fileId}": {
            "get": {
                "tags": [
                    "Node"
                ],
                "summary": "Get File Can Be Reviewed",
                "description": "Gets the flag showing whether file can be reviewed or not",
                "parameters": [
                    {
                        "name": "fileId",
                        "in": "path",
                        "description": "The id of the File",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CanBeReviewed flag successfully retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not allowed to view this file",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unknown exception thrown"
                    }
                }
            }
        },
        "/api/Node/file/HasBeenReviewed/{fileId}": {
            "get": {
                "tags": [
                    "Node"
                ],
                "summary": "Get File Has Been Reviewed",
                "description": "Gets the flag showing whether file has been be reviewed or not",
                "parameters": [
                    {
                        "name": "fileId",
                        "in": "path",
                        "description": "The id of the File",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "HasBeenReviewed flag successfully retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not allowed to view this file",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unknown exception thrown"
                    }
                }
            }
        },
        "/api/Node/file/{fileId}": {
            "get": {
                "tags": [
                    "Node"
                ],
                "summary": "Get File by ID",
                "description": "Get a file by its ID",
                "parameters": [
                    {
                        "name": "fileId",
                        "in": "path",
                        "description": "The file id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the File object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileNodeDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileNodeDto"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "File ID is missing or incorrect",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "The file has been deleted"
                    }
                }
            }
        },
        "/api/Node/folder/{folderId}": {
            "get": {
                "tags": [
                    "Node"
                ],
                "summary": "Get Folder by ID",
                "description": "Get a folder by its ID",
                "parameters": [
                    {
                        "name": "folderId",
                        "in": "path",
                        "description": "The folder id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the Folder object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FolderDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/FolderDto"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Folder ID is missing or incorrect",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "The folder has been deleted"
                    }
                }
            }
        },
        "/api/Node/folder/{folderId}/contents": {
            "get": {
                "tags": [
                    "Node"
                ],
                "summary": "Retrieves a list of files currently in the folder",
                "parameters": [
                    {
                        "name": "folderId",
                        "in": "path",
                        "description": "Id of folder",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the Folder object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FileNodeDto"
                                    }
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FileNodeDto"
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Folder ID is missing or incorrect",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not allowed to view the contents of this folder",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unknown exception thrown",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Node/GetAllTags": {
            "get": {
                "tags": [
                    "Node"
                ],
                "summary": "Gets all the tags for every file related to a user",
                "description": "Gets all the tags for every file related to a user",
                "responses": {
                    "200": {
                        "description": "List of tags/files successfully retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FilesWithTagsDto"
                                    }
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FilesWithTagsDto"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unknown exception thrown"
                    }
                }
            }
        },
        "/api/Notification": {
            "get": {
                "tags": [
                    "Notification"
                ],
                "summary": "Get Notifications",
                "description": "Get all Notifications for the user",
                "responses": {
                    "200": {
                        "description": "Returns the Notification DTO object(s)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NotificationDto"
                                    }
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NotificationDto"
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "invalid user or something else went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Notification/SetNotificationsAsRead": {
            "put": {
                "tags": [
                    "Notification"
                ],
                "summary": "Set Notifications As Read",
                "description": "Set all listed notifications as Read",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns the Update DTO object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateDto"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid user or something else went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Notification/GetPopupNotificationContent": {
            "post": {
                "tags": [
                    "Notification"
                ],
                "summary": "Get Popup Notification Content",
                "description": "Gets content for Popup Notification",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PubSubNotificationDto"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PubSubNotificationDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PubSubNotificationDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns the Notification DTO object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationDto"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "invalid user or something else went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Organisation/{organisationId}": {
            "get": {
                "tags": [
                    "Organisation"
                ],
                "summary": "Get Organisation",
                "description": "Get an Organisation by Id",
                "parameters": [
                    {
                        "name": "organisationId",
                        "in": "path",
                        "description": "The Organisation id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the Organisation object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganisationDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganisationDto"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Organisation found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Organisation Id is empty",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Organisation/platform": {
            "get": {
                "tags": [
                    "Organisation"
                ],
                "summary": "Get all Organisations/Firms for a particular platform",
                "parameters": [
                    {
                        "name": "partialOrganisationName",
                        "in": "query",
                        "description": "Optional parameter for a partial part of the beginning of the organisation name",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrganisationDto"
                                    }
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrganisationDto"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Organisation/{organisationId}/singleadviser": {
            "get": {
                "tags": [
                    "Organisation"
                ],
                "summary": "Get All Single Adviser Companies for a particular parent organisation",
                "parameters": [
                    {
                        "name": "organisationId",
                        "in": "path",
                        "description": "Guid of the parent organisation",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "partialOrganisationName",
                        "in": "query",
                        "description": "Optional parameter for a partial part of the beginning of the organisation name",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrganisationDto"
                                    }
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrganisationDto"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/PubSub/GetWebSocketConnection": {
            "get": {
                "tags": [
                    "PubSub"
                ],
                "summary": "Get Web Socket Connection",
                "description": "Gets a websocket connection for the current user",
                "responses": {
                    "200": {
                        "description": "Returns the websocket connection info",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PubSubConnectionDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/PubSubConnectionDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unable to get websocket connection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/PubSub/GetWebSocketConnection/{userId}": {
            "get": {
                "tags": [
                    "PubSub"
                ],
                "summary": "Join other Web Socket Connection",
                "description": "Gets a websocket connection for the supplied user",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the websocket connection info",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PubSubConnectionDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/PubSubConnectionDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unable to get websocket connection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/PubSub/AddUserToWebSocketGroup": {
            "put": {
                "tags": [
                    "PubSub"
                ],
                "summary": "Add User To Web Socket Group",
                "description": "Add current user to a WebSocket group",
                "parameters": [
                    {
                        "name": "groupName",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the websocket connection info",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unable to get websocket connection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/PubSub/RemoveUserFromWebSocketGroup": {
            "delete": {
                "tags": [
                    "PubSub"
                ],
                "summary": "Remove User From Web Socket Group",
                "description": "Remove current user to a WebSocket group",
                "parameters": [
                    {
                        "name": "groupName",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the websocket connection info",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unable to get websocket connection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Reminder": {
            "get": {
                "tags": [
                    "Reminder"
                ],
                "summary": "Get Reminders",
                "description": "Get all reminders by user",
                "parameters": [
                    {
                        "name": "applicationId",
                        "in": "query",
                        "description": "The applicationId to identify all app that are using the reminders",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the Reminder DTO object(s)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReminderDto"
                                    }
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReminderDto"
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "invalid user or something else went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Reminder"
                ],
                "summary": "Create Reminder",
                "description": "Creates a Reminder for the current User",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateReminderDto"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateReminderDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateReminderDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Reminder successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Reminder"
                ],
                "summary": "Update Reminder",
                "description": "Updates a Reminder for the current User",
                "requestBody": {
                    "description": "DTO for reminder",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateReminderDto"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateReminderDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateReminderDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Reminder successfully updated"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Reminder"
                ],
                "summary": "Delete Reminder",
                "description": "Deletes a Reminder for the current User",
                "parameters": [
                    {
                        "name": "reminderId",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reminder successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Sharing/contacts": {
            "get": {
                "tags": [
                    "Sharing"
                ],
                "summary": "Get Contact List",
                "description": "Get the contact list for a user",
                "responses": {
                    "200": {
                        "description": "Returns the User object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ContactDto"
                                    }
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ContactDto"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not allowed to view another user's list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Sharing/advisers": {
            "get": {
                "tags": [
                    "Sharing"
                ],
                "summary": "Get Adviser List",
                "description": "Get the adviser list for the current user",
                "responses": {
                    "200": {
                        "description": "Returns a list of OrgAdviserDtos for advisers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrgAdviserDto"
                                    }
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrgAdviserDto"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Sharing/remove-contact/{contactId}": {
            "delete": {
                "tags": [
                    "Sharing"
                ],
                "summary": "Remove Contact",
                "description": "Remove a contact",
                "parameters": [
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "the contact's user id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Contact not found for user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Sharing/add-contact": {
            "post": {
                "tags": [
                    "Sharing"
                ],
                "summary": "Add Contact",
                "description": "Adds a new Contact for the logged in user.  If the email address is not an existing user, an invite is sent.\r\nOtherwise, the user is informed they are now a Contact",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContactInviteDto"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContactInviteDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContactInviteDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns the user object for the new Contact",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContactDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContactDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Max is negative",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Sharing/resendInvite": {
            "post": {
                "tags": [
                    "Sharing"
                ],
                "summary": "Resend Contact Invite",
                "description": "Resends an email to a pending Contact",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContactInviteDto"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContactInviteDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContactInviteDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Contact email not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Sharing/{nodeId}/list": {
            "get": {
                "tags": [
                    "Sharing"
                ],
                "summary": "Get Shared With",
                "description": "For a specific node return a nodeShareDTO for each Contact of the nodeOwner",
                "parameters": [
                    {
                        "name": "nodeId",
                        "in": "path",
                        "description": "the node id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of users or companies Contacts of the user, populates permissions of the shares accordingly",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NodeShareDto"
                                    }
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NodeShareDto"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Node id is empty",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Sharing/{nodeId}/contact/{contactId}": {
            "get": {
                "tags": [
                    "Sharing"
                ],
                "summary": "Get Sharing Options",
                "description": "For a specific Contact or ifa company, get the sharing status for a node",
                "parameters": [
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "the Contact user id, or company id for an ifa",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "nodeId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the ShareStatus object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeShareDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeShareDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Node or user or company not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not the node owner",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Sharing/{nodeId}/contact/{contactId}/putoption/{option}": {
            "put": {
                "tags": [
                    "Sharing"
                ],
                "summary": "Put Sharing Options",
                "description": "For a specific Contact or ifa company, set the sharing status for a node",
                "parameters": [
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "the Contact user id, or company id for an ifa",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "nodeId",
                        "in": "path",
                        "description": "the node id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "option",
                        "in": "path",
                        "description": "the option",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the node share object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeShareDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeShareDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Node or user or company not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not the node owner",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Sharing/contact/{contactId}": {
            "get": {
                "tags": [
                    "Sharing"
                ],
                "summary": "Get Node List",
                "description": "For a specific contact or ifa company, return all nodes shared with them by current user",
                "parameters": [
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "the contact user id, or company id for an ifa",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of  node share objects",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NodeShareDto"
                                    }
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NodeShareDto"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Node or user or company not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Sharing"
                ],
                "summary": "Post Shared Node List",
                "description": "For a specific contact or ifa company, add+remove shared nodes",
                "parameters": [
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "the contact user id, or company id for an ifa",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "the list of node share dtos",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/NodeShareDto"
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/NodeShareDto"
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/NodeShareDto"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns the node share object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Node or user or company not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user does not have permission to alter these permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Sharing/node/{nodeId}": {
            "post": {
                "tags": [
                    "Sharing"
                ],
                "summary": "Post Contact List For Node",
                "description": "For a specific node (folder or file), add and remove contacts",
                "parameters": [
                    {
                        "name": "nodeId",
                        "in": "path",
                        "description": "the node being shared",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "the list of node share dtos",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/NodeShareDto"
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/NodeShareDto"
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/NodeShareDto"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns the node share object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Node or user or company not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user does not have permission to alter these permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Sharing/users/list": {
            "get": {
                "tags": [
                    "Sharing"
                ],
                "summary": "Get Users Who Shared With Me List",
                "description": "For a user, return all the users who list them as a contact",
                "responses": {
                    "200": {
                        "description": "Returns a list of users objects",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserDto"
                                    }
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserDto"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Contact is not valid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Contact or users not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Sharing/users/{sharerId}": {
            "get": {
                "tags": [
                    "Sharing"
                ],
                "summary": "Get Shared With Me Node List (Contact)",
                "description": "For a user, return folders + files files created by another user (sharer)",
                "parameters": [
                    {
                        "name": "sharerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of folders, files and sections",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SharedVaultDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/SharedVaultDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Contact is not valid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Contact or users not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/User/Get": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get User",
                "description": "Get the user by their email address or id, or current user if not supplied",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "The user email",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The user id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the User object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Email is missing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/User/{userId}": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update User",
                "description": "Update a user's details",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "the user id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "the new user details",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserDto"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns the User object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "user data is missing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is trying to update another user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/User/Register": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Register a User",
                "description": "Register a user - client is registering themselves through the UI",
                "requestBody": {
                    "description": "the new user to be registered",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserDto"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns the User object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDto"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "user data is missing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The bearer token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/User/AcceptTerms": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Accept Terms",
                "description": "Updates the Terms and Conditions records for logged in User.",
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "User has already Accepted Terms and Conditions"
                    },
                    "401": {
                        "description": "The bearer token is invalid"
                    }
                }
            }
        },
        "/api/User/verificationCode": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Send verification code via email or text",
                "description": "Sends an email/text containing a verification code",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phoneNumber",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Code successfully sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "If received user is not supplied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/User/confirmCode": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Confirm security code",
                "description": "Recieves a four digit security code and confirms if it matches the code associated with the user",
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Code matches",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "If supplied code does not match user or wrong format is entered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "If user is unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "If user has entered a wrong code more than 5 times",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AccountDetailDto": {
                "type": "object",
                "properties": {
                    "providerCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "providerName": {
                        "type": "string",
                        "nullable": true
                    },
                    "providerContactPhone": {
                        "type": "string",
                        "nullable": true
                    },
                    "providerContactLink": {
                        "type": "string",
                        "nullable": true
                    },
                    "accountName": {
                        "type": "string",
                        "nullable": true
                    },
                    "accountNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "address": {
                        "type": "string",
                        "nullable": true
                    },
                    "keyInformation": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "nullable": true
                    },
                    "secondaryInformation": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ActivityLogEntryDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "nodeId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "fileExtension": {
                        "type": "string",
                        "nullable": true
                    },
                    "userId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "organisationId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "activityLogAction": {
                        "type": "string",
                        "nullable": true
                    },
                    "platform": {
                        "type": "string",
                        "nullable": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "AdviserDto": {
                "type": "object",
                "properties": {
                    "adviserReference": {
                        "type": "string",
                        "nullable": true
                    },
                    "companyReference": {
                        "type": "string",
                        "nullable": true
                    },
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "hasCompany": {
                        "type": "boolean"
                    },
                    "isAdmin": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "ClientInviteDto": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "surname": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    },
                    "sendCopy": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "ContactDto": {
                "type": "object",
                "properties": {
                    "contactId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "surname": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "relationship": {
                        "type": "string",
                        "nullable": true
                    },
                    "isPending": {
                        "type": "boolean"
                    },
                    "contactType": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "reference": {
                        "type": "string",
                        "nullable": true
                    },
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "nodeShares": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NodeShareDto"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ContactInviteDto": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "surname": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    },
                    "sendCopy": {
                        "type": "boolean"
                    },
                    "relationship": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "CreateFolderDto": {
                "type": "object",
                "properties": {
                    "parentId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "CreateReminderDto": {
                "type": "object",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "reminderDate": {
                        "type": "string",
                        "nullable": true
                    },
                    "reminderTime": {
                        "type": "string",
                        "nullable": true
                    },
                    "notifyInAdvance": {
                        "type": "string",
                        "nullable": true
                    },
                    "fileId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "folderId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false
            },
            "DistributionCampaignReportDayDto": {
                "type": "object",
                "properties": {
                    "day": {
                        "type": "string",
                        "nullable": true
                    },
                    "numberOfDocumentsRead": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "numberOfDocumentsDownloaded": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "DistributionCampaignReportDto": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "nullable": true
                    },
                    "deliveredDate": {
                        "type": "string",
                        "nullable": true
                    },
                    "totalOpened": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalDelivered": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "firstOpened": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastOpened": {
                        "type": "string",
                        "nullable": true
                    },
                    "numberOfDownloads": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "campaignReports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DistributionCampaignReportDayDto"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "DistributionClientDetailsDto": {
                "type": "object",
                "properties": {
                    "clientId": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "surname": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "readStatus": {
                        "type": "boolean"
                    },
                    "clientStatus": {
                        "type": "string",
                        "nullable": true
                    },
                    "vulnerability": {
                        "type": "string",
                        "nullable": true
                    },
                    "readDateTime": {
                        "type": "string",
                        "nullable": true
                    },
                    "totalOfReadByClient": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "isRevoked": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "DistributionClientDto": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "surname": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "externalReference": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "DistributionClientsSearchDto": {
                "type": "object",
                "properties": {
                    "clientCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "clients": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DistributionClientDto"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "DistributionFileNodeDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "parentId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "ownerId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "createdById": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "isOwner": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "dateShared": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "createdBy": {
                        "type": "string",
                        "nullable": true
                    },
                    "fileName": {
                        "type": "string",
                        "nullable": true
                    },
                    "extension": {
                        "type": "string",
                        "nullable": true
                    },
                    "mimeType": {
                        "type": "string",
                        "nullable": true
                    },
                    "sizeInBytes": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "folderName": {
                        "type": "string",
                        "nullable": true
                    },
                    "associatedProduct": {
                        "type": "string",
                        "nullable": true
                    },
                    "isEditable": {
                        "type": "boolean"
                    },
                    "isDeletable": {
                        "type": "boolean"
                    },
                    "isVisibilityEditable": {
                        "type": "boolean"
                    },
                    "hasThumbnail": {
                        "type": "boolean"
                    },
                    "hasPreview": {
                        "type": "boolean"
                    },
                    "canBeReviewed": {
                        "type": "boolean"
                    },
                    "hasBeenReviewed": {
                        "type": "boolean"
                    },
                    "stillNeedsMalwareScan": {
                        "type": "boolean"
                    },
                    "isExternalDocument": {
                        "type": "boolean"
                    },
                    "visibility": {
                        "type": "string",
                        "nullable": true
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "isDistributedFile": {
                        "type": "boolean"
                    },
                    "version": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "DistributionFileRemovalDto": {
                "type": "object",
                "properties": {
                    "projectId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "timestamp": {
                        "type": "string",
                        "nullable": true
                    },
                    "processed": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "unprocessed": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FailureDto"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "DistributionFileVersionsDto": {
                "type": "object",
                "properties": {
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "currentVersion": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "files": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DistributionFileNodeDto"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "DistributionFilterDto": {
                "type": "object",
                "properties": {
                    "company": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "adviser": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "nullable": true
                    },
                    "accountStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "subAccounts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "vulnerabilities": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "DistributionProjectAnalyticsInfoDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "nullable": true
                    },
                    "sendDateAdviser": {
                        "type": "string",
                        "nullable": true
                    },
                    "sendDateClient": {
                        "type": "string",
                        "nullable": true
                    },
                    "sizeOfDistribution": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "readCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "version": {
                        "type": "string",
                        "nullable": true
                    },
                    "fileVisibility": {
                        "type": "string",
                        "nullable": true
                    },
                    "isSubAccount": {
                        "type": "boolean"
                    },
                    "createdDate": {
                        "type": "string",
                        "nullable": true
                    },
                    "downloads": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "DistributionProjectClientListDto": {
                "type": "object",
                "properties": {
                    "clientListDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DistributionClientDetailsDto"
                        },
                        "nullable": true
                    },
                    "summary": {
                        "$ref": "#/components/schemas/DistributionProjectSummaryDto"
                    }
                },
                "additionalProperties": false
            },
            "DistributionProjectDateAnalyticsDto": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "nullable": true
                    },
                    "totalProjectsSent": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalDocumentsRead": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "DistributionProjectDatesAnalyticsDto": {
                "type": "object",
                "properties": {
                    "distributionProjectDateAnalyticsDtos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DistributionProjectDateAnalyticsDto"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "DistributionProjectInfoDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "versionedFiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DistributionFileVersionsDto"
                        },
                        "nullable": true
                    },
                    "isCsvFiltered": {
                        "type": "boolean"
                    },
                    "filterCriteria": {
                        "$ref": "#/components/schemas/DistributionFilterDto"
                    },
                    "isSubAccount": {
                        "type": "boolean"
                    },
                    "fileVisibility": {
                        "type": "string",
                        "nullable": true
                    },
                    "scheduledDateTimeClient": {
                        "type": "string",
                        "nullable": true
                    },
                    "scheduledDateTimeAdviser": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastModifiedBy": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastModifiedDate": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "DistributionProjectSummaryDto": {
                "type": "object",
                "properties": {
                    "totalOfClients": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalOfReadByProject": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "DistributionProjectsAnalyticsDto": {
                "type": "object",
                "properties": {
                    "totalProjects": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalDocumentsDownloaded": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalDocumentsOpened": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalDistributedDocuments": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "FailureDto": {
                "type": "object",
                "properties": {
                    "reference": {
                        "type": "string",
                        "nullable": true
                    },
                    "reason": {
                        "type": "string",
                        "nullable": true
                    },
                    "details": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "FeatureDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "enabled": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "FeaturePlanForUserDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "featurePlanType": {
                        "type": "string",
                        "nullable": true
                    },
                    "expiryDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "nextRenewalDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "paymentFrequency": {
                        "type": "string",
                        "nullable": true
                    },
                    "planPaymentType": {
                        "type": "string",
                        "nullable": true
                    },
                    "rewardPeriodStart": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "rewardPeriodEnd": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "rewardPeriodActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FeatureDto"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "FileImportantRecentDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "thumbnail": {
                        "type": "string",
                        "nullable": true
                    },
                    "createDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "displayName": {
                        "type": "string",
                        "nullable": true
                    },
                    "productReference": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "FileNodeDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "parentId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "ownerId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "createdById": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "isOwner": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "dateShared": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "createdBy": {
                        "type": "string",
                        "nullable": true
                    },
                    "fileName": {
                        "type": "string",
                        "nullable": true
                    },
                    "extension": {
                        "type": "string",
                        "nullable": true
                    },
                    "mimeType": {
                        "type": "string",
                        "nullable": true
                    },
                    "sizeInBytes": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "folderName": {
                        "type": "string",
                        "nullable": true
                    },
                    "associatedProduct": {
                        "type": "string",
                        "nullable": true
                    },
                    "isEditable": {
                        "type": "boolean"
                    },
                    "isDeletable": {
                        "type": "boolean"
                    },
                    "isVisibilityEditable": {
                        "type": "boolean"
                    },
                    "hasThumbnail": {
                        "type": "boolean"
                    },
                    "hasPreview": {
                        "type": "boolean"
                    },
                    "canBeReviewed": {
                        "type": "boolean"
                    },
                    "hasBeenReviewed": {
                        "type": "boolean"
                    },
                    "stillNeedsMalwareScan": {
                        "type": "boolean"
                    },
                    "isExternalDocument": {
                        "type": "boolean"
                    },
                    "visibility": {
                        "type": "string",
                        "nullable": true
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "isDistributedFile": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "FileVisibility": {
                "enum": [
                    0,
                    1,
                    2,
                    3
                ],
                "type": "integer",
                "format": "int32"
            },
            "FilesWithTagsDto": {
                "type": "object",
                "properties": {
                    "fileId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "FlatFileNodeDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "parentId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "ownerId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "createdById": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "isOwner": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "dateShared": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "createdBy": {
                        "type": "string",
                        "nullable": true
                    },
                    "fileName": {
                        "type": "string",
                        "nullable": true
                    },
                    "extension": {
                        "type": "string",
                        "nullable": true
                    },
                    "mimeType": {
                        "type": "string",
                        "nullable": true
                    },
                    "sizeInBytes": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "folderName": {
                        "type": "string",
                        "nullable": true
                    },
                    "associatedProduct": {
                        "type": "string",
                        "nullable": true
                    },
                    "isEditable": {
                        "type": "boolean"
                    },
                    "isDeletable": {
                        "type": "boolean"
                    },
                    "isVisibilityEditable": {
                        "type": "boolean"
                    },
                    "hasThumbnail": {
                        "type": "boolean"
                    },
                    "hasPreview": {
                        "type": "boolean"
                    },
                    "canBeReviewed": {
                        "type": "boolean"
                    },
                    "hasBeenReviewed": {
                        "type": "boolean"
                    },
                    "stillNeedsMalwareScan": {
                        "type": "boolean"
                    },
                    "isExternalDocument": {
                        "type": "boolean"
                    },
                    "visibility": {
                        "type": "string",
                        "nullable": true
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "isDistributedFile": {
                        "type": "boolean"
                    },
                    "grandparentFolderName": {
                        "type": "string",
                        "nullable": true
                    },
                    "grandparentFolderId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false
            },
            "FolderConnectionDto": {
                "type": "object",
                "properties": {
                    "folderId": {
                        "type": "string",
                        "nullable": true
                    },
                    "platformProviderId": {
                        "type": "string",
                        "nullable": true
                    },
                    "platformReference": {
                        "type": "string",
                        "nullable": true
                    },
                    "productType": {
                        "type": "string",
                        "nullable": true
                    },
                    "productName": {
                        "type": "string",
                        "nullable": true
                    },
                    "connectionStatus": {
                        "type": "string",
                        "nullable": true
                    },
                    "disabledOn": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "isRead": {
                        "type": "boolean"
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "FolderDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "parentId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "ownerId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "createdById": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "isOwner": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "dateShared": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "createdBy": {
                        "type": "string",
                        "nullable": true
                    },
                    "folderType": {
                        "type": "string",
                        "nullable": true
                    },
                    "level": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "isEditable": {
                        "type": "boolean"
                    },
                    "isDeletable": {
                        "type": "boolean"
                    },
                    "canUpload": {
                        "type": "boolean"
                    },
                    "canCreateSubFolders": {
                        "type": "boolean"
                    },
                    "platformName": {
                        "type": "string",
                        "nullable": true
                    },
                    "guidanceText": {
                        "type": "string",
                        "nullable": true
                    },
                    "displayOrder": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "externalCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "productType": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "FolderTreeNodeDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "parentId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "ownerId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "createdById": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "isOwner": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "dateShared": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "createdBy": {
                        "type": "string",
                        "nullable": true
                    },
                    "folderType": {
                        "type": "string",
                        "nullable": true
                    },
                    "level": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "isEditable": {
                        "type": "boolean"
                    },
                    "isDeletable": {
                        "type": "boolean"
                    },
                    "canUpload": {
                        "type": "boolean"
                    },
                    "canCreateSubFolders": {
                        "type": "boolean"
                    },
                    "platformName": {
                        "type": "string",
                        "nullable": true
                    },
                    "guidanceText": {
                        "type": "string",
                        "nullable": true
                    },
                    "displayOrder": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "externalCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "productType": {
                        "type": "string",
                        "nullable": true
                    },
                    "childFolders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FolderTreeNodeDto"
                        },
                        "nullable": true
                    },
                    "contents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FileNodeDto"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "FolderType": {
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    35,
                    37,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    52,
                    53,
                    54,
                    55,
                    56,
                    57,
                    58,
                    61,
                    63,
                    64,
                    66,
                    67,
                    68,
                    70,
                    71,
                    72,
                    73,
                    74,
                    75,
                    76,
                    78,
                    79,
                    80,
                    81,
                    82,
                    83,
                    85,
                    86,
                    87,
                    88,
                    89,
                    91,
                    92,
                    94,
                    96,
                    97,
                    101,
                    103,
                    105,
                    106,
                    108,
                    109,
                    110,
                    113,
                    114,
                    115,
                    118,
                    119,
                    120,
                    121,
                    122,
                    123,
                    124,
                    125,
                    126,
                    127,
                    129,
                    130,
                    131,
                    132,
                    133,
                    134,
                    135,
                    136,
                    137,
                    138,
                    139,
                    140,
                    141,
                    142,
                    143,
                    150,
                    151,
                    152,
                    153,
                    154,
                    160
                ],
                "type": "integer",
                "format": "int32"
            },
            "Industry": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "code": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "enabled": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "NodeDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "parentId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "ownerId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "createdById": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "isOwner": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "dateShared": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "createdBy": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "NodeShareDto": {
                "type": "object",
                "properties": {
                    "nodeId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "contactId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "contactType": {
                        "type": "string",
                        "nullable": true
                    },
                    "canRead": {
                        "type": "boolean"
                    },
                    "canEdit": {
                        "type": "boolean"
                    },
                    "sharedAfterDeath": {
                        "type": "boolean"
                    },
                    "dateShared": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "isSharedSection": {
                        "type": "boolean"
                    },
                    "roleFilter": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "NotificationDataDto": {
                "type": "object",
                "properties": {
                    "fileId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "folderId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "other": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "NotificationDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "userId": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "body": {
                        "type": "string",
                        "nullable": true
                    },
                    "relatedNodeId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "date": {
                        "type": "string",
                        "nullable": true
                    },
                    "viewed": {
                        "type": "boolean"
                    },
                    "nodeOwnerId": {
                        "type": "string",
                        "nullable": true
                    },
                    "canAccessNode": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "OrgAdviserDto": {
                "type": "object",
                "properties": {
                    "contactId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "surname": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "relationship": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "isPending": {
                        "type": "boolean"
                    },
                    "contactType": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "reference": {
                        "type": "string",
                        "nullable": true
                    },
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "nodeShares": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NodeShareDto"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "OrganisationDto": {
                "type": "object",
                "properties": {
                    "organisationId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "network": {
                        "type": "string",
                        "nullable": true
                    },
                    "isSingleAdviserCompany": {
                        "type": "boolean"
                    },
                    "emailAddress": {
                        "type": "string",
                        "nullable": true
                    },
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "reference": {
                        "type": "string",
                        "nullable": true
                    },
                    "featurePlanId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "PlatformContext": {
                "enum": [
                    0,
                    1,
                    -1
                ],
                "type": "integer",
                "format": "int32"
            },
            "Provider": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "code": {
                        "type": "string",
                        "nullable": true
                    },
                    "industries": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "isScraped": {
                        "type": "boolean"
                    },
                    "hasCaptcha": {
                        "type": "boolean"
                    },
                    "hasSmsAuth": {
                        "type": "boolean"
                    },
                    "hasPhoneNumber": {
                        "type": "boolean"
                    },
                    "hasNoPassword": {
                        "type": "boolean"
                    },
                    "labelForIdentifier": {
                        "type": "string",
                        "nullable": true
                    },
                    "sublabelForIdentifier": {
                        "type": "string",
                        "nullable": true
                    },
                    "labelForPassword": {
                        "type": "string",
                        "nullable": true
                    },
                    "customTemplate": {
                        "type": "string",
                        "nullable": true
                    },
                    "passwordResetUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "folderType": {
                        "$ref": "#/components/schemas/FolderType"
                    },
                    "parentSection": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "ProviderAccountDto": {
                "type": "object",
                "properties": {
                    "providerCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "username": {
                        "type": "string",
                        "nullable": true
                    },
                    "password": {
                        "type": "string",
                        "nullable": true
                    },
                    "customFields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "PubSubConnectionDto": {
                "type": "object",
                "properties": {
                    "baseUrl": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "accessToken": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "PubSubNotificationDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "userId": {
                        "type": "string",
                        "nullable": true
                    },
                    "notificationId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "created": {
                        "type": "string",
                        "nullable": true
                    },
                    "data": {
                        "$ref": "#/components/schemas/NotificationDataDto"
                    }
                },
                "additionalProperties": false
            },
            "ReminderDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "userId": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "applicationId": {
                        "type": "string",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "nullable": true
                    },
                    "fileId": {
                        "type": "string",
                        "nullable": true
                    },
                    "folderId": {
                        "type": "string",
                        "nullable": true
                    },
                    "timezone": {
                        "type": "string",
                        "nullable": true
                    },
                    "dateTz": {
                        "type": "string",
                        "nullable": true
                    },
                    "timeTz": {
                        "type": "string",
                        "nullable": true
                    },
                    "notifyInAdvance": {
                        "type": "string",
                        "nullable": true
                    },
                    "snoozed": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "viewed": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "SharedVaultDto": {
                "type": "object",
                "properties": {
                    "folders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FolderDto"
                        },
                        "nullable": true
                    },
                    "files": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FileNodeDto"
                        },
                        "nullable": true
                    },
                    "sections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FolderDto"
                        },
                        "nullable": true
                    },
                    "sharingUserId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false
            },
            "StoreDistributionDetailsDto": {
                "type": "object",
                "properties": {
                    "isSubAccount": {
                        "type": "boolean"
                    },
                    "visibility": {
                        "type": "string",
                        "nullable": true
                    },
                    "distributionDateTimeClient": {
                        "type": "string",
                        "nullable": true
                    },
                    "distributionDateTimeAdviser": {
                        "type": "string",
                        "nullable": true
                    },
                    "sendNotification": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "SuggestedFolderDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "guidanceText": {
                        "type": "string",
                        "nullable": true
                    },
                    "level": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "folderType": {
                        "type": "string",
                        "nullable": true
                    },
                    "childFolders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SuggestedFolderDto"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "SuggestedProviderDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "url": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "TimePeriod": {
                "enum": [
                    0,
                    1,
                    2,
                    3
                ],
                "type": "integer",
                "format": "int32"
            },
            "TokenDto": {
                "type": "object",
                "properties": {
                    "accessToken": {
                        "type": "string",
                        "nullable": true
                    },
                    "refreshToken": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "UpdateDto": {
                "type": "object",
                "properties": {
                    "successfulUpdates": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "failedUpdates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FailureDto"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "UpdateReminderDto": {
                "type": "object",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "reminderDate": {
                        "type": "string",
                        "nullable": true
                    },
                    "reminderTime": {
                        "type": "string",
                        "nullable": true
                    },
                    "notifyInAdvance": {
                        "type": "string",
                        "nullable": true
                    },
                    "fileId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "folderId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "userId": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "UserDto": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "surname": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "emailConfirmed": {
                        "type": "boolean"
                    },
                    "userName": {
                        "type": "string",
                        "nullable": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "activationDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "acceptedTermsAndConditions": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "countryCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "phoneNumberConfirmed": {
                        "type": "boolean"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "organisation": {
                        "$ref": "#/components/schemas/OrganisationDto"
                    },
                    "organisationId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "lastLogin": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "modules": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "theme": {
                        "type": "string",
                        "nullable": true
                    },
                    "platform": {
                        "type": "string",
                        "nullable": true
                    },
                    "verificationCode": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            }
        },
        "securitySchemes": {
            "Bearer": {
                "type": "http",
                "description": "JWT Authorization header using the Bearer scheme. \r\n\r\n Enter 'Bearer' [space] and then your token in the text input below.\r\n\r\nExample: \"Bearer 12345abcdef\"",
                "scheme": "Bearer"
            }
        }
    },
    "security": [
        {
            "Bearer": []
        }
    ]
}